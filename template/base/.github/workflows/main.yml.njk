name: Main

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: 18
  SOLANA_VERSION: 1.18.12
{% if programFramework === 'anchor' %}
  ANCHOR_VERSION: 0.30.0
{% endif %}

jobs:
  format_and_lint_programs:
    name: Format & Lint Programs
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          clippy: true
          node: {% raw %}${{ env.NODE_VERSION }}{% endraw %}
          rustfmt: true

      - name: Format Programs
        run: pnpm programs:format

      - name: Lint Programs
        run: pnpm programs:lint

{% if jsClient %}
  format_and_lint_client_js:
    name: Format & Lint Client JS
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          node: {% raw %}${{ env.NODE_VERSION }}{% endraw %}

      - name: Format Client JS
        run: pnpm clients:js:format

      - name: Lint Client JS
        run: pnpm clients:js:lint
{% endif %}

{% if rustClient %}
  format_and_lint_client_rust:
    name: Format & Lint Client Rust
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          clippy: true
          node: {% raw %}${{ env.NODE_VERSION }}{% endraw %}
          rustfmt: true

      - name: Format Client Rust
        run: pnpm clients:rust:format

      - name: Lint Client Rust
        run: pnpm clients:rust:lint
{% endif %}

  build_programs:
    name: Build programs
    runs-on: ubuntu-latest
    needs: format_and_lint_programs
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-programs
          node: {% raw %}${{ env.NODE_VERSION }}{% endraw %}
          solana: {% raw %}${{ env.SOLANA_VERSION }}{% endraw %}
{% if programFramework === 'anchor' %}
          anchor: {% raw %}${{ env.ANCHOR_VERSION }}{% endraw %}
{% endif %}

      - name: Build Programs
        run: pnpm programs:build

      - name: Upload Program Builds
        uses: actions/upload-artifact@v4
        with:
          name: program-builds
          path: ./target/deploy/*.so
          if-no-files-found: error

      - name: Save Program Builds For Client Jobs
        uses: actions/cache/save@v4
        with:
          path: ./**/*.so
          key: {% raw %}${{ runner.os }}-builds-${{ github.sha }}{% endraw %}

  test_programs:
    name: Test Progams
    runs-on: ubuntu-latest
    needs: format_and_lint_programs
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-program-tests
          cargo-cache-fallback-key: cargo-programs
          node: {% raw %}${{ env.NODE_VERSION }}{% endraw %}
          solana: {% raw %}${{ env.SOLANA_VERSION }}{% endraw %}
{% if programFramework === 'anchor' %}
          anchor: {% raw %}${{ env.ANCHOR_VERSION }}{% endraw %}
{% endif %}

      - name: Test Programs
        run: pnpm programs:test

  generate_idls:
    name: Check IDL Generation
    runs-on: ubuntu-latest
    needs: format_and_lint_programs
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-programs
          cargo-cache-local-key: cargo-local
          node: {% raw %}${{ env.NODE_VERSION }}{% endraw %}
{% if programFramework === 'anchor' %}
          anchor: {% raw %}${{ env.ANCHOR_VERSION }}{% endraw %}
{% endif %}

      - name: Generate IDLs
        run: pnpm generate:idls

      - name: Check Working Directory
        run: |
          git status --porcelain
          test -z "$(git status --porcelain)"

{% if clients.length > 0 %}
  generate_clients:
    name: Check Client Generation
    runs-on: ubuntu-latest
    needs: format_and_lint_programs
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          node: {% raw %}${{ env.NODE_VERSION }}{% endraw %}
          rustfmt: true

      - name: Generate Clients
        run: pnpm generate:clients

      - name: Check Working Directory
        run: |
          git status --porcelain
          test -z "$(git status --porcelain)"
{% endif %}

{% if jsClient %}
  test_client_js:
    name: Test Client JS
    runs-on: ubuntu-latest
    needs: build_programs
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          node: {% raw %}${{ env.NODE_VERSION }}{% endraw %}
          solana: {% raw %}${{ env.SOLANA_VERSION }}{% endraw %}

      - name: Restore Program Builds
        uses: actions/cache/restore@v4
        with:
          path: ./**/*.so
          key: {% raw %}${{ runner.os }}-builds-${{ github.sha }}{% endraw %}

      - name: Test Client JS
        run: pnpm clients:js:test
{% endif %}

{% if rustClient %}
  test_client_rust:
    name: Test Client Rust
    runs-on: ubuntu-latest
    needs: build_programs
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-rust-client
          node: {% raw %}${{ env.NODE_VERSION }}{% endraw %}
          solana: {% raw %}${{ env.SOLANA_VERSION }}{% endraw %}

      - name: Restore Program Builds
        uses: actions/cache/restore@v4
        with:
          path: ./**/*.so
          key: {% raw %}${{ runner.os }}-builds-${{ github.sha }}{% endraw %}

      - name: Test Client Rust
        run: pnpm clients:rust:test
{% endif %}
